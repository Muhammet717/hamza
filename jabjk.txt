import 'package:flutter/material.dart';

void main() {
  runApp(const MyApp());
}

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  @override
  Widget build(BuildContext context) {

    return MaterialApp(
      title: 'To Do App Demo',
      theme: ThemeData(
        colorScheme: ColorScheme.fromSeed(seedColor: Colors.deepOrangeAccent),

        useMaterial3: true,
      ),
      home: const MyHomePage(title: 'Flutter Demo Home Page'),
    );
  }
}

class MyHomePage extends StatefulWidget {
  const MyHomePage({super.key, required this.title});

  final String title;

  @override
  State<MyHomePage> createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {

  List<String> todos= [];

  void addToDoItem(int index){
    showDialog(context: context, builder: (BuildContext context){
      var todoitem =" ";
      return AlertDialog(
        title: Text("Yeni Yapılıcak"),
        content: TextField(
          onChanged: ( t){
            todoitem=t;
          },
        ),
        actions: [
          ElevatedButton(onPressed: (){
            setState(() {
              if (todoitem.isNotEmpty){

                if(index==-1){
                  todos.add(todoitem);
                }
                else{
                  todos[index]=todoitem;
                }
              }

            });
            Navigator.pop(context);
          }, child: Text(index==-1?"Ekle":"Değiştir"))
        ],
      );
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        backgroundColor: Theme.of(context).colorScheme.inversePrimary,
        title: Text(widget.title),
      ),
      body: ListView.builder(
        itemCount: todos.length,
          itemBuilder: (context,index){
        return Card(

          elevation: 5,
          margin: EdgeInsets.symmetric(vertical: 12,horizontal: 14),
          child: ListTile(
            onTap:(){
              addToDoItem(index);
            },
            title: Text(todos[index]),

            trailing: IconButton(
              icon: Icon(Icons.delete),
              onPressed: (){
                setState(() {
                  todos.removeAt(index);
                });
              },
            ),


          ),
        );
      }),
      floatingActionButton: FloatingActionButton(
        onPressed: () =>addToDoItem(-1),
        tooltip: 'Not Ekle',
        child: const Icon(Icons.add),
      ),
    );
  }
}